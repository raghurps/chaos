apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chaos.fullname" . }}
  labels:
  {{- include "chaos.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "chaos.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "chaos.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chaos.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: 
          args:
          {{- if .Values.config.interval }}
          - --interval={{ .Values.config.interval }}
          {{- else }}
          - --interval=60s
          {{- end }}
          {{- if .Values.config.excludeNamespaces }}
          - --excluded_namespaces={{ .Values.config.excludeNamespaces }}
          {{- else }}
          - --excluded_namespaces=kube-system,flux-system,{{ .Release.Namespace }}
          {{- end }}
          {{- if .Values.config.namespaces }}
          - --namespaces={{ .Values.config.namespaces }}
          {{- end }}
          {{- if .Values.config.deploymentAnnotations }}
          - --deployment_annotations={{ .Values.config.deploymentAnnotations }}
          {{- end }}
          env:
            - name: LOG_LEVEL
              {{- if .Values.logLevel }}
              value: {{ .Values.logLevel }}
              {{- else }}
              value: info
              {{- end }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
